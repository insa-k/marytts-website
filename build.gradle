plugins {
    id 'base'
}

ext {
    pageTitles = [
            "documentation/history.md"          : "History",
            "download/index.md"                 : "Download",
            "download/releasenotes-3.0.0.md"    : "Release Notes",
            "download/releasenotes-3.0.1.md"    : "Release Notes",
            "download/releasenotes-3.0.2.md"    : "Release Notes",
            "download/releasenotes-3.0.3.md"    : "Release Notes",
            "download/releasenotes-3.1-beta1.md": "Release Notes",
            "download/releasenotes-3.1-beta2.md": "Release Notes",
            "download/releasenotes-3.1.0.md"    : "Release Notes",
            "download/releasenotes-3.5.0.md"    : "Release Notes",
            "download/releasenotes-3.6.0.md"    : "Release Notes",
            "download/releasenotes-4.0-beta.md" : "Release Notes",
            "download/releasenotes-4.0.0.md"    : "Release Notes",
            "download/releasenotes-4.1.0.md"    : "Release Notes",
            "download/releasenotes-4.1.1.md"    : "Release Notes",
            "download/releasenotes-4.2.0.md"    : "Release Notes",
            "download/releasenotes-4.3.0.md"    : "Release Notes",
            "download/releasenotes-4.3.1.md"    : "Release Notes",
            "download/releasenotes-5.0.md"      : "Release Notes",
            "download/releasenotes-5.1.1.md"    : "Release Notes",
            "download/releasenotes-5.1.2.md"    : "Release Notes",
            "download/releasenotes-5.1.md"      : "Release Notes",
            "download/releasenotes-5.2.md"      : "Release Notes",
            "index.md"                          : "MaryTTS",
            untitled                            : 'No Title'
    ]
}

task generatePageTitles(type: GeneratePageTitles) {
    destDir = file("$buildDir/generatedPageTitles")
}

task processMarkdown(type: Copy) {
    into "$buildDir/generatedContent/content"
    from 'src/site/markdown', {
        include '**/*.md'
    }
    from 'src/site/markdown', {
        include '**/*.md.vm'
        rename { it - '.vm' }
        expand project.properties
    }
}

assemble {
    dependsOn processMarkdown
}

class GeneratePageTitles extends DefaultTask {

    @OutputDirectory
    File destDir

    @TaskAction
    void generate() {
        project.pageTitles.each { mdFile, title ->
            def destPath = project.file("$destDir/$mdFile")
            destPath.parentFile.mkdirs()
            project.file("${destPath}.txt").withWriter { writer ->
                writer.println "title=$title"
                writer.println "type=page"
                writer.println "status=published"
                writer.println "~~~~~~"
            }
        }
    }
}
