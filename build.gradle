plugins {
    id 'org.jbake.site' version '1.2.0'
}

ext {
    pageTitles = [
            "index.adoc"                                             : "The MARY Text-to-Speech System (${project.name})",
            "documentation/overview.adoc"                            : "Overview",
            "documentation/tibetan.adoc"                             : "Tibetan",
            "documentation/history.adoc"                             : "Project History",
            "documentation/index.adoc"                               : "Documentation",
            "documentation/maryxml/index.adoc"                       : "MaryXML",
            "documentation/module-architecture.adoc"                 : "Architecture Walkthrough",
            "documentation/publications/index.adoc"                  : "MaryTTS Publications",
            "documentation/publications/mary-publications_bib.html": "Bib entries",
            "faq.adoc"                                               : "Frequently Asked Questions",
            "pavoque/index.adoc"                                     : "PAVOQUE Project",
            "pavoque/publications/pavoque-publications.adoc"         : "PAVOQUE Publications",
            "pavoque/publications/pavoque-publications_bib.html"   : "Bib entries",
            "legal-information.adoc"                                 : "Legal Information",
            "data-protection.adoc"                                   : "Data Protection",
            "download/index.adoc"                                    : "Download",
            "download/releasenotes-3.0.0.md"                       : "Release Notes",
            "download/releasenotes-3.0.1.md"                       : "Release Notes",
            "download/releasenotes-3.0.2.md"                       : "Release Notes",
            "download/releasenotes-3.0.3.md"                       : "Release Notes",
            "download/releasenotes-3.1-beta1.md"                   : "Release Notes",
            "download/releasenotes-3.1-beta2.md"                   : "Release Notes",
            "download/releasenotes-3.1.0.md"                       : "Release Notes",
            "download/releasenotes-3.5.0.md"                       : "Release Notes",
            "download/releasenotes-3.6.0.md"                       : "Release Notes",
            "download/releasenotes-4.0-beta.md"                    : "Release Notes",
            "download/releasenotes-4.0.0.md"                       : "Release Notes",
            "download/releasenotes-4.1.0.md"                       : "Release Notes",
            "download/releasenotes-4.1.1.md"                       : "Release Notes",
            "download/releasenotes-4.2.0.md"                       : "Release Notes",
            "download/releasenotes-4.3.0.md"                       : "Release Notes",
            "download/releasenotes-4.3.1.md"                       : "Release Notes",
            "download/releasenotes-5.0.md"                         : "Release Notes",
            "download/releasenotes-5.1.1.md"                       : "Release Notes",
            "download/releasenotes-5.1.2.md"                       : "Release Notes",
            "download/releasenotes-5.1.md"                         : "Release Notes",
            "download/releasenotes-5.2.md"                         : "Release Notes",
            "dev-doc/index.adoc"                                     : "Overview",
            "dev-doc/mail-lists.adoc"                                : "Mailing Lists",
            "dev-doc/team.adoc"                                      : "Team",
            untitled                                               : 'No Title'
    ]
    maryVersions = ['5.1', '5.1.1', '5.1.2', '5.2']
}

repositories {
    maven {
        url "https://oss.jfrog.org/artifactory/oss-release-local"
    }
}

maryVersions.each { maryVersion ->
    configurations.create maryVersion
    dependencies.add maryVersion, "de.dfki.mary:marytts:$maryVersion:javadoc"
}

jbake {
    srcDirName = relativePath("$buildDir/generatedContent")
    destDirName = 'site'
    configuration['site.host'] = 'http://marytts.github.io/'
    configuration['render.tags'] = false
    configuration['render.index'] = false
    configuration['render.sitemap'] = true
    configuration['render.feed'] = false
    configuration['render.archive'] = false
    configuration['markdown.extensions'] = 'ALL'
}

task generatePageTitles(type: GeneratePageTitles) {
    destDir = file("$buildDir/generatedPageTitles")
}

task processAdoc(type: Copy) {
    dependsOn generatePageTitles
    into "$buildDir/generatedContent/content"
    from 'src/site/adoc', {
        include '**/*.adoc', '**/*.html', '**/*.md'
        eachFile {
            def headerFile = file("$generatePageTitles.destDir/${it.path}.txt")
            headerFile = headerFile.exists() ? headerFile : file("$generatePageTitles.destDir/untitled.txt")
            filter org.apache.tools.ant.filters.ConcatFilter, prepend: headerFile
        }
    }
    from 'src/site/adoc', {
        include '**/*.adoc', '**/*.md.vm'
        rename { it - '.vm' }
        expand project.properties
        eachFile {
            def headerFile = file("$generatePageTitles.destDir/${it.path}.txt")
            headerFile = headerFile.exists() ? headerFile : file("$generatePageTitles.destDir/untitled.txt")
            filter org.apache.tools.ant.filters.ConcatFilter, prepend: headerFile
        }
    }
}

task processAssets(type: Copy) {
    from 'src/site/assets'
    into "$buildDir/generatedContent/assets"
    maryVersions.each { maryVersion ->
        from configurations."$maryVersion", {
            filesMatching '*.jar', { jarFileDetails ->
                copy {
                    from zipTree(jarFileDetails.file)
                    into "$destinationDir/javadoc/$maryVersion"
                }
                jarFileDetails.exclude()
            }
        }
    }
}

task processTemplates(type: Copy) {
    from 'src/site/templates'
    into "$buildDir/generatedContent/templates"
}

task bibtex2html(type:Exec) {
    commandLine 'bibtex2html', 'src/site/resources/mary-publications.bib'
    commandLine 'bibtex2html', 'src/site/resources/pavoque-publications.bib'
}

task copyBib {
    dependsOn bibtex2html
    copy {
        from projectDir
        include "mary-publications*.*"
        into 'src/site/markdown/documentation/publications'
    }
    copy {
        from projectDir
        include "pavoque-publications*.*"
        into 'src/site/markdown/pavoque/publications'
    }
}

bake {
    dependsOn processAdoc, processAssets, processTemplates
}

assemble {
    dependsOn bake
}

class GeneratePageTitles extends DefaultTask {

    @OutputDirectory
    File destDir

    @TaskAction
    void generate() {
        project.pageTitles.each { adocFile, title ->
            def destPath = project.file("$destDir/$adocFile")
            destPath.parentFile.mkdirs()
            project.file("${destPath}.txt").withWriter { writer ->
                writer.println "title=$title"
                writer.println "type=page"
                writer.println "status=published"
                writer.println "~~~~~~"
            }
        }
    }
}
